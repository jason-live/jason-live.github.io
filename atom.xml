<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jason-live.github.io/"/>
  <updated>2018-02-26T01:31:42.212Z</updated>
  <id>https://jason-live.github.io/</id>
  
  <author>
    <name>JasonLive</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack全家桶+react全家桶项目实战[1]-项目准备</title>
    <link href="https://jason-live.github.io/2018/02/26/webpack-react-01/"/>
    <id>https://jason-live.github.io/2018/02/26/webpack-react-01/</id>
    <published>2018-02-26T01:29:46.000Z</published>
    <updated>2018-02-26T01:31:42.212Z</updated>
    
    <content type="html"><![CDATA[<p>项目开始前，我们先聊一聊关于项目的一些说明。该项目起始于2017年初，当时公司主要技术栈为gulp+angular，鉴于react的火热的生态，在公司决定研发bss管理系统时选用react开发，目的也是为react native打下基础，以解决后期公司大前端技术栈的逐步成熟。（当时没有选择vue开发的主要原因是weex生态还不够特别成熟），既然决定换新，项目的构建也跟着一起换，从gulp转向火热的webpack，持续大半年的更新迭代，我们将构建模块逐步从项目中抽离出来，把构建模块作为npm包单独管理，完成和项目代码解耦，于是就有了后面我们要说的<a href="https://www.npmjs.com/package/wci-build" target="_blank" rel="noopener">wci-build</a>构建模块包和<a href="https://www.npmjs.com/package/wci-cli" target="_blank" rel="noopener">wci-cli</a>项目脚手架。</p><h2 id="我们要做什么"><a href="#我们要做什么" class="headerlink" title="我们要做什么"></a>我们要做什么</h2><h4 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h4><p>项目采用前后端分离的形式，后端选用Maven+SpringClould全家桶开发，前端选用webpack+react全家桶开发，前后端全部采用包管理工具完全解决项目依赖管理的难题，版本管理采用git，前后端通过json交互，swgger管理接口文档，接口全部遵循restful规范。由于本文面向社区开放，故本文中不涉及公司业务层的代码，本文全部代码均为最新编写，我们以一个旅游管理系统的三个模块为大家演示项目（登陆登出、用户模块、景点模块）。为了快速开展，本文涉及的后端代码直接采用Java的SSM框架搭建，源码也将为大家奉上。朋友们也可以使用mock模拟接口数据。后期我们在演示nodejs+espress时将接口代码全部转为node形式。</p><h4 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h4><p>因本文不是讲解基础，故大家在敲代码前，还需要具备一定的前端基础，部分如下</p><ol><li>html、css、javascript基础知识</li><li>es6基础知识</li><li>react基础知识</li><li>了解什么是webpack、babel、redux、react-router、nodejs、npm</li><li>熟悉蚂蚁金服ant design</li><li>熟悉less基本使用</li></ol><h4 id="解决什么问题"><a href="#解决什么问题" class="headerlink" title="解决什么问题"></a>解决什么问题</h4><p>本项目集成了最新的react16、react-router4、redux，同时可以选择性集成antd|antd mobile，在解决繁琐的架构配置工作外，还解决了以下问题</p><h5 id="通用问题"><a href="#通用问题" class="headerlink" title="通用问题"></a>通用问题</h5><ol><li>支持开发效率更高的ES6编写代码。</li><li>拆分开发、测试、生产环境，完成从开发到上线的所有工作。</li><li>开发环境包含热替换，本地IP、端口可配置，接口可配置，微服务模块可配置</li><li>测试环境包含代码压缩、合并、css抽离、公共组件抽离、代码添加hash、测试版本后缀</li><li>生产环境包含代码压缩、合并、css抽离、公共组件抽离、代码添加hash、生产版本后缀（和测试代码完全一样，只缺少测试版本号）</li><li>支持自定义添加webpack loader</li></ol><h5 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h5><ol><li>目前大型项目后端多采用微服务架构，API接口在开发、测试、生产环境下来回切换，需要频繁修改代码。解决方案：通过配置文件的方式统一配置项目模块接口</li><li>项目模块在分拆开发的过程中css命名冲突，导致代码维护性较差。解决方案：构建工具预加载css时自动化添加hash，使css代码模块化</li><li>不同开发人员，不同的代码习惯造成项目代码难以维护。解决方案：在代码编写、构建、版本管理三个方向加入代码规范校验（airbnb规范）</li><li>在同时开发多个系统的时候，构建业务模块在不同的项目都存在，当需要修改配置或者优化构建方案的时候，需要修改多个项目的配置。解决方案：抽离构建模块，采用npm形式依赖。</li></ol><h4 id="还有什么问题要解决"><a href="#还有什么问题要解决" class="headerlink" title="还有什么问题要解决"></a>还有什么问题要解决</h4><p>虽然经过大半年迭代，但我们还需要在实际项目开发中支持更多的个性化需求</p><ol><li>cdn自动化</li><li>更加完善的持续集成</li><li>单元测试，包括代码，交互测试</li><li>mock数据，实现前后端真正0接触</li><li>…</li></ol><h4 id="希望"><a href="#希望" class="headerlink" title="希望"></a>希望</h4><p>大家在开发过程中遇到任何问题，希望可以给我们留言，我们会不断优化项目。未来，我们还会加入mobx、rxjs、immutablejs、GraphQL等，也希望在和大家的探讨中，持续进步。</p><h2 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h2><p>本项目基础环境必须依赖<a href="http://nodejs.cn/" target="_blank" rel="noopener">nodejs</a>和<a href="https://www.npmjs.com/" target="_blank" rel="noopener">npm</a>,未安装的朋友可以去官网自行安装，安装教程这里不详细说明，安装完成后使用如下命令，查看是否安装成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>####初始化项目<br>本项目我们使用<a href="https://www.npmjs.com/package/wci-cli" target="_blank" rel="noopener">wci-cli</a>脚手架初始化项目</p><ul><li>全局安装wci-cli</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g wci-cli</span><br></pre></td></tr></table></figure><ul><li>创建项目<br>wci-cli 脚手架可以创建三种项目，分别是1.纯净的react项目 2.包含antd的react项目 3.包含antd-mobile的react项目，命令如下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wci new myapp</span><br></pre></td></tr></table></figure><p>执行命令后，命令行会提示是否需要安装antd以及选择antd类型，即可完成项目初始化，如下</p><p><img src="http://7xr3o7.com1.z0.glb.clouddn.com/QQ20180225-100027@2x.png" alt=""></p><p>项目目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">myapp</span><br><span class="line">├── app // 项目业务代码</span><br><span class="line">│   ├── assets // 静态文件目录（图片、字体等）</span><br><span class="line">│   ├── script // js代码目录</span><br><span class="line">│   │   ├── actions // redux action目录</span><br><span class="line">│   │   ├── componets // react 无状态组件目录</span><br><span class="line">│   │   ├── containers // react 业务代码</span><br><span class="line">│   │   ├── reducers // redux reducer目录</span><br><span class="line">│   │   ├── util // 工具包目录</span><br><span class="line">│   │   │   ├── theme.js // antd自定义样式文件</span><br><span class="line">│   │   ├── Home.js // 首页</span><br><span class="line">│   │   ├── home.less // 首页样式</span><br><span class="line">│   ├── styles // 全局样式目录</span><br><span class="line">│   ├── index.js // 项目入口文件</span><br><span class="line">│   ├── index.tpl.html // 项目html模版</span><br><span class="line">├── node_modules // 依赖包目录</span><br><span class="line">├── .babelrc // babel配置文件</span><br><span class="line">├── .eslintrc // eslint代码校验配置文件</span><br><span class="line">├── .gitignore</span><br><span class="line">├── package.json</span><br><span class="line">├── README.md</span><br><span class="line">├── wci.json // wci项目配置文件（主要配置一些开发、测试、生产环境的信息）</span><br><span class="line">└── webpack.js // webpack自定义配置文件</span><br></pre></td></tr></table></figure><p>执行如下命令，运行开发环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd myapp</span><br><span class="line">npm run start</span><br></pre></td></tr></table></figure><p><img src="http://7xr3o7.com1.z0.glb.clouddn.com/QQ20180225-100339@2x.png" alt=""></p><p><img src="http://7xr3o7.com1.z0.glb.clouddn.com/QQ20180225-100436@2x.png" alt=""></p><p>如上图，我们的项目已经跑起来了…</p><ul><li>测试、发布<br>因我们需要保证测试代码和生产代码必须保持一致，所有在实际项目中，我们可以运行如下命令构建代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm run test // 测试环境打包</span><br><span class="line">npm run dist // 生产环境打包</span><br></pre></td></tr></table></figure><p>测试代码<br><img src="http://7xr3o7.com1.z0.glb.clouddn.com/QQ20180225-103612@2xtest.png" alt=""></p><p>生产代码<br><img src="http://7xr3o7.com1.z0.glb.clouddn.com/QQ20180225-103524@2xdist.png" alt=""></p><p>到这里，我们已经完成项目前期开发的所有准备工作，接下来，我们一起开始撸代码吧</p><blockquote><p>项目结束后，我会为大家奉上两篇彩蛋，分别是 1. 一步步搭建webpack前端构建工具并抽成npm单独模块 2. 一步步构建自己的npm开发包并且以一个真实例子演示（开发一个命令行生成文件夹结构的小工具）</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目开始前，我们先聊一聊关于项目的一些说明。该项目起始于2017年初，当时公司主要技术栈为gulp+angular，鉴于react的火热的生态，在公司决定研发bss管理系统时选用react开发，目的也是为react native打下基础，以解决后期公司大前端技术栈的逐步成熟
      
    
    </summary>
    
      <category term="react系列教程" scheme="https://jason-live.github.io/categories/react%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="webpack" scheme="https://jason-live.github.io/tags/webpack/"/>
    
      <category term="react" scheme="https://jason-live.github.io/tags/react/"/>
    
      <category term="ant design" scheme="https://jason-live.github.io/tags/ant-design/"/>
    
      <category term="前端工程化" scheme="https://jason-live.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>2018我的学习分享路线</title>
    <link href="https://jason-live.github.io/2018/02/04/essays-2018-01/"/>
    <id>https://jason-live.github.io/2018/02/04/essays-2018-01/</id>
    <published>2018-02-04T05:08:09.000Z</published>
    <updated>2018-02-04T05:35:53.414Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xr3o7.com1.z0.glb.clouddn.com/timg%20%281%29.jpeg" alt=""></p><p>2017年底开始写自己的博客，目的除了记录日常工作中的笔记外，更重要的是把自己的学习和工作经验分享给大家，希望大家给予指正，也希望通过我的文章，能给大家带来更多的帮助。进入2018年，博主将从基础学习、前端实战、后端实战等几个方向更新学习笔记，希望能完成按周更新的速度，为大家奉上50几篇好的文章。</p><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><ul><li><p>html、css、javascript基础笔记<br>本模块主要为前端最基础的内容，但我们不说那些大家都明白的，我们只写大家容易忽略又在开发过程中比较重要的内容，在本模块中，我们将以javascript为重点，css、html多少会提及。毕竟，想学好前端，js基础是必须的。js我们主要以《javascript高级程序设计》一书为依据，按章节介绍。重点是js的面向对象编程。</p></li><li><p>javascript设计模式<br>本模块我们将深入介绍js在日常开发中涉及到的设计模式，培养对代码封装、抽象的思路，提高自身代码质量</p></li><li><p>nodejs基础<br>本模块我们将nodejs的原生API，通过一个个例子让大家理解nodejs使用，毕竟现在做前端开发，不会nodejs是做不好前端的</p></li><li><p>linux基础笔记<br>本模块我们将简单介绍linux在日常开发中的使用，一些基本的文件、网络等操作和一些常用的环境部署</p></li></ul><hr><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><ul><li><p>react系列学习笔记<br>本模块，我们将学习react基础，使用react、redux、react-router搭建开发环境并完成一个小的demo。</p><blockquote><p>涉及内容：react生命周期、react常用技巧、redux原理解析、项目架构设计</p></blockquote></li><li><p>react native系列学习笔记<br>本模块，我们将学习react native基础，使用react native、redux、react-router搭建开发环境并完成一个小的demo</p></li><li><p>vue系列全家桶学习笔记<br>本模块，我们将学习vue基础，使用vue、redux、vue-router搭建开发环境并完成一个小的demo</p></li><li><p>webpack系列学习笔记<br>本模块，我们将学习webpack构建工具，一步步带着大家完成一个大型项目的构建脚手架，包含开发环境的热更新、less预编译、集成react|vue全家桶、配置业务分离、三层代码校验（开发、发布、git提交）、开发工具配置、集成蚂蚁金服的antd-design、生产环境的代码压缩、代码按需加在、代码版本控制、服务端渲染、业务模块拆分、生产环境docker化等功能</p></li><li><p>electron系列学习笔记<br>本模块，我们将使用electron把之前开发的demo改为c/s架构的系统</p></li><li><p>其他<br>本模块，我们将介绍一些前端开发过程中会涉及的一些其他内容，譬如TypeScript、GraphQL、mobx、rxjs等内容</p></li></ul><hr><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><ul><li><p>nodejs系列学习笔记<br>本模块，我们将使用koa|express、mysql|mongodb 为之前开发的前端提供服务端的支持，完成前后端的对接</p></li><li><p>java系列学习笔记<br>本模块，我们将使用springMVC+spring+mybatis搭建后端开发环境，后期更换springboot，springclould等，我们还会使用redis等逐步完善项目，使项目更加趋于集群，高并发方向构建</p></li><li><p>其他<br>本模块，我们将介绍一些后端其他的内容</p></li></ul><hr><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>本模块，相对来说有些杂，我们会穿插的记录一些日常开发中的各个方面</p><blockquote><p>涉及内容：git、github、jenkins、npm、sublime、atom、vscode、docker、mac全栈环境配置、各技术官网推荐、大牛博客推荐等</p></blockquote><hr><p>希望大家在2018年事事如意，事业进步，PS：少年贪玩，青年迷恋爱情，壮年汲汲于成名成家，暮年自安于自欺欺人。人寿几何，顽铁能炼成的精金，能有多少？我们曾如此渴望命运的波澜,到最后才发现,人生最曼妙的风景,竟是内心的淡定与从容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://7xr3o7.com1.z0.glb.clouddn.com/timg%20%281%29.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2017年底开始写自己的博客，目的除了记录日常工作中的笔记外，更重要的是把自己的学习和工作经验分享给大家，
      
    
    </summary>
    
      <category term="生活随笔系列" scheme="https://jason-live.github.io/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="随笔" scheme="https://jason-live.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>npm命令行工具学习笔记（1）– 我的第一个命令</title>
    <link href="https://jason-live.github.io/2018/01/11/npm-command-01-md/"/>
    <id>https://jason-live.github.io/2018/01/11/npm-command-01-md/</id>
    <published>2018-01-11T14:35:11.000Z</published>
    <updated>2018-01-11T14:41:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>在开发大型项目的时候，有时候在代码解耦层面会出现很多通用且无耦合性的组件、模块包等，这时需要将这些公共的部分提取出来在几个或者开源出来。本文就为介绍如何开发一个公共模块包</p><p>开发公共模块包需要开发者掌握几个概念</p><ol><li>nodejs命令行是如何工作的</li><li>npm包是如何发布的</li><li>github是如何使用的</li><li>如何更好的管理开发版本</li></ol><p>因本文不是基础教程，故在这里不介绍nodejs、npm、github的基础使用方式</p><h3 id="npm包结构"><a href="#npm包结构" class="headerlink" title="npm包结构"></a>npm包结构</h3><p>npm包实际是一个存档文件，即一个目录直接打包为.zip或tar.gz格式的文件，安装后解压还原为目录。完全符合CommonJS规范的包目录应该包含如下这些文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package.json : 包描述文件。</span><br><span class="line">bin: 用于存放可执行二进制文件的目录。</span><br><span class="line">lib：用于存放javascript代码的目录。</span><br><span class="line">doc：用于存放文档的目录。</span><br><span class="line">test: 用于存放单元测试用例的代码。</span><br></pre></td></tr></table></figure></p><p>我们开发npm包模块的时候，就可以按照以上目录结构，进行开发</p><h3 id="正式开始前的准备"><a href="#正式开始前的准备" class="headerlink" title="正式开始前的准备"></a>正式开始前的准备</h3><ul><li><p>注册github</p><blockquote><p>虽然npm包开发版本管理可以不依赖github，但目前社区基本采用github+npm同时管理代码的方式，注册好自己的github后，在github上创建一个项目，博主在这里以wci-cli为例说明</p></blockquote></li><li><p>注册npm</p><blockquote><p>可以通过官网注册，也可以通过命令行注册，命令行注册方式我们后面会说明</p></blockquote></li></ul><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><ul><li>初始化npm项目</li></ul><p>在github创建项目wci-cli,使用<code>git clone</code>下载至本地，进入wci-cli项目，使用下述命令，在命令行一键回车到底</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p>生成package.json文件，内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;wci-cli&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;jasonlive&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改package.json文件如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;wci-cli&quot;, ## 项目名称</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;, ## 项目版本</span><br><span class="line">  &quot;description&quot;: &quot;webpack、react、redux、react-router、antd&quot;, ## 项目描述</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;, ## 入口文件</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;, ## 项目可执行脚本</span><br><span class="line">  &quot;repository&quot;: &#123;</span><br><span class="line">    &quot;type&quot;: &quot;git&quot;,</span><br><span class="line">    &quot;url&quot;: &quot;git+https://github.com/jason-live/wci-cli.git&quot;</span><br><span class="line">  &#125;, ## 项目代码存放目录，一般为github目录地址</span><br><span class="line">  &quot;author&quot;: &quot;jasonlive&quot;, ## 项目拥有着</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;bin&quot;: &#123;</span><br><span class="line">    &quot;wci&quot;: &quot;./bin/wci&quot;</span><br><span class="line">  &#125;, ## 项目可执行bash命令</span><br><span class="line">  &quot;bugs&quot;: &#123;</span><br><span class="line">    &quot;url&quot;: &quot;https://github.com/jason-live/wci-cli/issues&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;homepage&quot;: &quot;https://github.com/jason-live/wci-cli#readme&quot;, ## 项目说明路径，一般为github上的README.md文件</span><br><span class="line">  &quot;dependencies&quot;: &#123;&#125; ## 项目依赖</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在项目目录下创建如下文件|文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bin ## 可执行文件目录</span><br><span class="line">lib ## 打包的代码目录</span><br><span class="line">src ## 源码目录</span><br><span class="line">doc ## 文档目录</span><br><span class="line">boilerplates ## 模版文件目录</span><br><span class="line">.gitignore ## 忽略文件，npm会默认识别这个文件</span><br></pre></td></tr></table></figure></p><h3 id="我的第一个命令"><a href="#我的第一个命令" class="headerlink" title="我的第一个命令"></a>我的第一个命令</h3><p>在bin目录下，新建wci文件，修改文件权限<code>chmod 755 wci</code>，加入如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env node</span><br><span class="line"></span><br><span class="line">console.log(&apos;hello world&apos;);</span><br><span class="line"></span><br><span class="line">if (process.argv.slice(2).join(&apos;&apos;) === &apos;-v&apos;) &#123;</span><br><span class="line">  console.log(&apos;wci-cli: &apos; + require(&apos;../package&apos;).version);</span><br><span class="line">  return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>保存提交至github，提交至npm，文章前面提到注册npm可以两种方式，因博主之前注册过npm账号，故这里采用<code>npm login</code>方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm login</span><br><span class="line">Username: jasonlive</span><br><span class="line">Password:</span><br><span class="line">Email: (this IS public) 15161461631@139.com</span><br><span class="line">Logged in as jasonlive on https://registry.npmjs.org/.</span><br></pre></td></tr></table></figure></p><p>填写用户名、密码、邮箱，登录后，使用<code>npm who am i</code>查看是否登录成功，使用<code>npm publish</code>，即可将代码提交至npm</p><h3 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g wci-cli ## 从npm上安装自己的npm包</span><br></pre></td></tr></table></figure><p><img src="http://7xr3o7.com1.z0.glb.clouddn.com/az.png" alt=""><br>显示安装成功，使用<code>wci|wci -v</code><br><img src="http://7xr3o7.com1.z0.glb.clouddn.com/sy.png" alt=""><br>出现如下提示，说明可以使用<br>讲到这里，我们之前新建的项目目录结构大部分还未使用，我们将在后续文章中继续为大家讲解，并带着大家一步步构建一个可以使用的npm命令行工具</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在开发大型项目的时候，有时候在代码解耦层面会出现很多通用且无耦合性的组件、模块包等，这时需要将这些公共的部分提取出来在几个或者开源出来。本文就为介绍如何开发一个公共模块包&lt;/p&gt;
&lt;p&gt;开发公共模块包需要开发者掌握几个概念&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;nodejs命令行是如何
      
    
    </summary>
    
      <category term="npm系列教程" scheme="https://jason-live.github.io/categories/npm%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="wci-cli" scheme="https://jason-live.github.io/tags/wci-cli/"/>
    
      <category term="npm" scheme="https://jason-live.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>hexo 个人博客工具使用教程（3）-- pure主题个性化配置</title>
    <link href="https://jason-live.github.io/2017/12/28/hexo-03/"/>
    <id>https://jason-live.github.io/2017/12/28/hexo-03/</id>
    <published>2017-12-28T04:44:42.000Z</published>
    <updated>2018-01-11T14:32:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>npm命令行工具学习笔记（1）– 我的第一个命令<br>前两篇文章我们简要描述了hexo的使用方法，并简单介绍了hexo主题pure的部署方式，本文针对pure进行详细讲解，因pure官方文档对配置信息描述的不是很清楚，所以博主在这里也研究了很久，基本完成了搭建个人博客的需求。本文将从整个页面来主次顺序来一步步配置</p><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h3><blockquote><p>hexo默认是英文的，需要改成中文模式，在/{项目目录}/-config.yml修改</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><blockquote><p>左边顶部个人简介–这部分区域的配置在主题目录的_config.yml里面配置 /{项目目录}/themes/pure/-config.yml</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">enabled: true # 是否开启个人简介</span><br><span class="line">avatar: images/avatar_jason.jpg # 个人头像</span><br><span class="line">gravatar: # 谷歌邮箱，如果设置了这个，将默认显示谷歌头像</span><br><span class="line">author: Jason # 姓名</span><br><span class="line">author_title: Web Developer &amp; Designer # 简介</span><br><span class="line">author_description: 个人简介。</span><br><span class="line">location: 南京, 中国 # 地区</span><br><span class="line">follow: https://github.com/jason-live</span><br></pre></td></tr></table></figure><h3 id="菜单列表"><a href="#菜单列表" class="headerlink" title="菜单列表"></a>菜单列表</h3><blockquote><p>个人信息下面的菜单列表，默认的只有首页和归档可以点击，其余点击均为404页面，博主在这里卡壳了很久才找到配置的方法</p><ol><li>找到/{项目目录}/themes/pure 下的_source文件夹</li><li>拷贝_source下的所有文件到/{项目目录}/source文件夹下</li><li>重启项目，菜单列表下的所有链接就可以点击了</li></ol></blockquote><h3 id="快速链接"><a href="#快速链接" class="headerlink" title="快速链接"></a>快速链接</h3><blockquote><p>菜单列表下面的部分，这部分配置需要/{项目目录}/themes/pure/-config.yml和/{项目目录}/-config.yml两个文件同时配置</p></blockquote><ul><li>/{项目目录}/-config.yml</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">author: JasonLive</span><br></pre></td></tr></table></figure><ul><li>/{项目目录}/themes/pure/-config.yml</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  links:</span><br><span class="line">    github: https://github.com/jason-live # 你的github地址</span><br><span class="line">    rss: atom.xml</span><br><span class="line">  link_tooltip: true # 是否显示链接的tooltip</span><br></pre></td></tr></table></figure><h3 id="打赏"><a href="#打赏" class="headerlink" title="打赏"></a>打赏</h3><blockquote><p>页面底部赏字的配置，有兴趣的同学可以配置，也可自行关闭，/{项目目录}/themes/pure/-config.yml</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">donate:</span><br><span class="line">  enable: true # 关闭打赏</span><br><span class="line">  weipay:</span><br><span class="line">    image: images/donate/weipay.jpg</span><br><span class="line">    qrcode: images/donate/mywechatpay.jpg</span><br><span class="line">    title: 微信支付</span><br><span class="line">  alipay:</span><br><span class="line">    image: images/donate/alipay.jpg</span><br><span class="line">    qrcode: images/donate/myalipay.jpg</span><br><span class="line">    title: 支付宝</span><br></pre></td></tr></table></figure><h3 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h3><blockquote><p>文章底部的分享配置，分别可以配置PC和移动端不同的分享，/{项目目录}/themes/pure/-config.yml</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># weibo,qq,qzone,wechat,tencent,douban,diandian,facebook,twitter,google,linkedin</span><br><span class="line">share:</span><br><span class="line">  enable: true  # 是否启用分享</span><br><span class="line">  sites: weibo,qq,wechat,facebook,twitter  # PC端显示的分享图标</span><br><span class="line">  mobile_sites: weibo,qq,wechat,facebook,twitter  # 移动端显示的分享图标</span><br></pre></td></tr></table></figure><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><blockquote><p>评论系统需要自行启用，博主选择的为livere，首先需要去livere官网注册，拿到注册的id后，/{项目目录}/themes/pure/-config.yml 配置以下信息</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># Comment</span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line">comment:</span><br><span class="line">  type: livere  # 启用哪种评论系统</span><br><span class="line">  disqus:  # enter disqus shortname here</span><br><span class="line">  youyan:</span><br><span class="line">    uid: 1783844 # enter youyan uid</span><br><span class="line">  livere:</span><br><span class="line">    uid: MTAyMC8zMjczOC85Mjk5 # enter youyan uid</span><br><span class="line">  gitment:</span><br><span class="line">    githubID:</span><br><span class="line">    repo:</span><br><span class="line">    ClientID:</span><br><span class="line">    ClientSecret:</span><br><span class="line">    lazy: false</span><br></pre></td></tr></table></figure><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul><li>豆瓣书单</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># douban 豆瓣书单</span><br><span class="line">Api:</span><br><span class="line">  https://developers.douban.com/wiki/?title=book_v2 图书</span><br><span class="line">books:</span><br><span class="line">  https://api.douban.com/v2/book/user/jason-live/collections?start=0&amp;count=100 个人书单列表</span><br><span class="line">douban:</span><br><span class="line">  user: jason-live # 豆瓣用户名</span><br><span class="line">  start: 0 # 从哪一条记录开始</span><br><span class="line">  count: 100 # 获取豆瓣书单数据条数</span><br></pre></td></tr></table></figure><ul><li>开启文章统计</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">postCount:</span><br><span class="line">  enable: true</span><br><span class="line">  wordcount: true  # 文章字数统计</span><br><span class="line">  min2read: true  # 阅读时长预计</span><br></pre></td></tr></table></figure><ul><li>个人知识技能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">skills:</span><br><span class="line">  Git: ★★★★☆</span><br><span class="line">  webpack、rullup: ★★★★★</span><br><span class="line">  Javascript: ★★★★☆</span><br><span class="line">  HTML+CSS: ★★★★☆</span><br><span class="line">  Javs: ★★★☆☆</span><br></pre></td></tr></table></figure><ul><li>个人标签</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">labels:</span><br><span class="line">  - 前端开发</span><br><span class="line">  - 前端架构</span><br><span class="line">  - Web前端</span><br><span class="line">  - java开发者</span><br><span class="line">  - 强迫症患者</span><br></pre></td></tr></table></figure><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><blockquote><p>之所以把写作放在这里，是因为每个主题都有各种自己的配置方式，配合hexo官方给出的命令，一并说明</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><ul><li>layout说明</li></ul><table><thead><tr><th>布局</th><th>路径</th><th>备注</th></tr></thead><tbody><tr><td>post</td><td>source/_posts</td><td>标准模式</td></tr><tr><td>page</td><td>source</td><td></td></tr><tr><td>draft</td><td>source/_drafts</td><td>草稿模式</td></tr></tbody></table><ul><li>生成静态文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate // hexo g</span><br></pre></td></tr></table></figure><ul><li>部署</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy // hexo d</span><br></pre></td></tr></table></figure><ul><li>发表草稿</li></ul><blockquote><p>刚刚提到了 Hexo 的一种特殊布局：draft，这种布局在建立时会被保存到 source/_drafts 文件夹，您可通过 publish 命令将草稿移动到 source/_posts 文件夹，该命令的使用方式与 new 十分类似，您也可在命令中指定 layout 来指定布局。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;npm命令行工具学习笔记（1）– 我的第一个命令&lt;br&gt;前两篇文章我们简要描述了hexo的使用方法，并简单介绍了hexo主题pure的部署方式，本文针对pure进行详细讲解，因pure官方文档对配置信息描述的不是很清楚，所以博主在这里也研究了很久，基本完成了搭建个人博客的需
      
    
    </summary>
    
      <category term="个人博客搭建系列" scheme="https://jason-live.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="hexo" scheme="https://jason-live.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 个人博客工具使用教程（2）-- 选择一个主题</title>
    <link href="https://jason-live.github.io/2017/12/28/hexo-02/"/>
    <id>https://jason-live.github.io/2017/12/28/hexo-02/</id>
    <published>2017-12-28T01:52:46.000Z</published>
    <updated>2017-12-28T02:01:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="选择一个主题"><a href="#选择一个主题" class="headerlink" title="选择一个主题"></a>选择一个主题</h2><p>hexo提供了很多主题供用户使用，开发者可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>中选择自己喜欢的主题。在这里我们选用<a href="https://github.com/cofess/hexo-theme-pure" target="_blank" rel="noopener">pure</a>作为示例，一一讲解hexo搭配主题的使用步骤</p><h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#123;项目目录&#125;</span><br><span class="line">git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br></pre></td></tr></table></figure><blockquote><p>修改{项目目录}/_config.yml文件，将theme: landscape 修改为：theme: pure</p></blockquote><h4 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/pure</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><blockquote><p>打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 即可看见pure主题默认界面</p></blockquote><h4 id="集成github，让你的博客飞起来"><a href="#集成github，让你的博客飞起来" class="headerlink" title="集成github，让你的博客飞起来"></a>集成github，让你的博客飞起来</h4><p>目前我们已经可以在本地看到我们自己的博客了，接下来就是集成github，让我们的博客飞起来</p><h6 id="1-安装hexo-deployer-git插件"><a href="#1-安装hexo-deployer-git插件" class="headerlink" title="1.安装hexo-deployer-git插件"></a>1.安装hexo-deployer-git插件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><h6 id="2-在全局配置文件-config-yml里配置以下代码"><a href="#2-在全局配置文件-config-yml里配置以下代码" class="headerlink" title="2. 在全局配置文件_config.yml里配置以下代码"></a>2. 在全局配置文件_config.yml里配置以下代码</h6><blockquote><p>github 使用这里就不多说了，个人认为每个开发者都应该学会使用github。在自己的github账号里创建一个项目，项目名必须是你的账号名+.github.io，例如：facebook.github.io</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &#123;你的git地址&#125;</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h6 id="3-构建项目"><a href="#3-构建项目" class="headerlink" title="3. 构建项目"></a>3. 构建项目</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><h6 id="4-部署网站"><a href="#4-部署网站" class="headerlink" title="4. 部署网站"></a>4. 部署网站</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h6 id="5-查看博客"><a href="#5-查看博客" class="headerlink" title="5. 查看博客"></a>5. 查看博客</h6><blockquote><p>浏览器打开<a href="https://{你的github账号ID}.github.io/" target="_blank" rel="noopener">https://{你的github账号ID}.github.io/</a> 即可查看自己的博客啦</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;选择一个主题&quot;&gt;&lt;a href=&quot;#选择一个主题&quot; class=&quot;headerlink&quot; title=&quot;选择一个主题&quot;&gt;&lt;/a&gt;选择一个主题&lt;/h2&gt;&lt;p&gt;hexo提供了很多主题供用户使用，开发者可以在&lt;a href=&quot;https://hexo.io/themes
      
    
    </summary>
    
      <category term="个人博客搭建系列" scheme="https://jason-live.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="hexo" scheme="https://jason-live.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 个人博客工具使用教程（1）-- hexo部署</title>
    <link href="https://jason-live.github.io/2017/12/28/hexo-01/"/>
    <id>https://jason-live.github.io/2017/12/28/hexo-01/</id>
    <published>2017-12-28T01:20:33.000Z</published>
    <updated>2017-12-28T01:53:37.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo中文官网</a></p><h3 id="什么是hexo"><a href="#什么是hexo" class="headerlink" title="什么是hexo"></a>什么是hexo</h3><p>快速、简洁且高效的博客框架,只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。适合所有互联网从业人员搭建自己的博客网站</p><h3 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g // 全局安装hexo脚手架</span><br><span class="line">hexo init blog // 初始化一个hexo项目</span><br><span class="line">cd blog // 进入项目</span><br><span class="line">npm install // 初始化依赖包</span><br><span class="line">hexo server //启动</span><br></pre></td></tr></table></figure><h3 id="环境基础"><a href="#环境基础" class="headerlink" title="环境基础"></a>环境基础</h3><h6 id="hexo环境依赖于nodejs和git，在安装hexo前确保电脑上已经安装nodejs和git环境，这里不再详细说明node和git的安装，具体可以在网上google相关技术博文"><a href="#hexo环境依赖于nodejs和git，在安装hexo前确保电脑上已经安装nodejs和git环境，这里不再详细说明node和git的安装，具体可以在网上google相关技术博文" class="headerlink" title="hexo环境依赖于nodejs和git，在安装hexo前确保电脑上已经安装nodejs和git环境，这里不再详细说明node和git的安装，具体可以在网上google相关技术博文"></a>hexo环境依赖于nodejs和git，在安装hexo前确保电脑上已经安装nodejs和git环境，这里不再详细说明node和git的安装，具体可以在网上google相关技术博文</h6><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &#123;项目名&#125;</span><br></pre></td></tr></table></figure><h6 id="初始化一个hexo项目，进入项目目录"><a href="#初始化一个hexo项目，进入项目目录" class="headerlink" title="初始化一个hexo项目，进入项目目录"></a>初始化一个hexo项目，进入项目目录</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><h5 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h5><blockquote><p>网站的 配置 信息，您可以在此配置大部分的参数</p></blockquote><h5 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h5><blockquote><p>应用程序的信息</p></blockquote><h5 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h5><blockquote><p>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。<br>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p></blockquote><h5 id="source"><a href="#source" class="headerlink" title="source"></a>source</h5><blockquote><p>资源文件夹是存放用户资源的地方。除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p></blockquote><h5 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h5><blockquote><p>主题 文件夹。Hexo 会根据主题来生成静态页面。</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h6 id="config-yml-是hexo全局配置文件，hexo每个thems都会有一个config-yml，这个我们后面再说。以下内容摘自官网"><a href="#config-yml-是hexo全局配置文件，hexo每个thems都会有一个config-yml，这个我们后面再说。以下内容摘自官网" class="headerlink" title="config.yml 是hexo全局配置文件，hexo每个thems都会有一个config.yml，这个我们后面再说。以下内容摘自官网"></a>config.yml 是hexo全局配置文件，hexo每个thems都会有一个config.yml，这个我们后面再说。<em>以下内容摘自官网</em></h6><h5 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h5><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>网站标题</td></tr><tr><td>subtitle</td><td>网站副标题</td></tr><tr><td>description</td><td>网站描述</td></tr><tr><td>author</td><td>您的名字</td></tr><tr><td>language</td><td>网站使用的语言</td></tr><tr><td>timezone</td><td>网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC 。</td></tr></tbody></table><blockquote><p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p></blockquote><h5 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h5><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>url</td><td>网址  </td></tr><tr><td>root</td><td>网站根目录  </td></tr><tr><td>permalink</td><td>文章的 永久链接 格式 :year/:month/:day/:title/</td></tr><tr><td>permalink_defaults</td><td>永久链接中各部分的默认值</td></tr></tbody></table><blockquote><p>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则请将您的" target="_blank" rel="noopener">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog" target="_blank" rel="noopener">http://yoursite.com/blog</a> 并把 root 设为 /blog/。</p></blockquote><h5 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h5><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>source_dir</td><td>资源文件夹，这个文件夹用来存放内容。</td><td>source</td></tr><tr><td>public_dir</td><td>公共文件夹，这个文件夹用于存放生成的站点文件。</td><td>public</td></tr><tr><td>tag_dir</td><td>标签文件夹</td><td>tags</td></tr><tr><td>archive_dir</td><td>归档文件夹</td><td>archives</td></tr><tr><td>category_dir</td><td>分类文件夹</td><td>categories</td></tr><tr><td>code_dir</td><td>Include code 文件夹</td><td>downloads/code</td></tr><tr><td>i18n_dir</td><td>国际化（i18n）文件夹</td><td>:lang</td></tr><tr><td>skip_render</td><td>跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</td></tr></tbody></table><blockquote><p>如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。</p></blockquote><h5 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h5><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>new_post_name</td><td>新文章的文件名称</td><td>:title.md</td></tr><tr><td>default_layout</td><td>预设布局</td><td>post</td></tr><tr><td>auto_spacing</td><td>在中文和英文之间加入空格</td><td>false</td></tr><tr><td>titlecase</td><td>把标题转换为 title case</td><td>false</td></tr><tr><td>external_link</td><td>在新标签中打开链接</td><td>true</td></tr><tr><td>filename_case</td><td>把文件名称转换为 (1) 小写或 (2) 大写</td><td>0</td></tr><tr><td>render_drafts</td><td>显示草稿</td><td>false</td></tr><tr><td>post_asset_folder</td><td>启动 Asset 文件夹</td><td>false</td></tr><tr><td>relative_link</td><td>把链接改为与根目录的相对位址</td><td>false</td></tr><tr><td>future</td><td>显示未来的文章</td><td>true</td></tr><tr><td>highlight</td><td>代码块的设置</td></tr></tbody></table><blockquote><p>默认情况下，Hexo生成的超链接都是绝对地址。例如，如果您的网站域名为example.com,您有一篇文章名为hello，那么绝对链接可能像这样：<a href="http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。" target="_blank" rel="noopener">http://example.com/hello.html，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。</a></p></blockquote><h5 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h5><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>default_category</td><td>默认分类</td><td>uncategorized</td></tr><tr><td>category_map</td><td>分类别名 </td></tr><tr><td>tag_map</td><td>标签别名</td></tr></tbody></table><h5 id="日期-时间格式"><a href="#日期-时间格式" class="headerlink" title="日期 / 时间格式"></a>日期 / 时间格式</h5><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>date_format</td><td>日期格式</td><td>YYYY-MM-DD</td></tr><tr><td>time_format</td><td>时间格式</td><td>H:mm:ss</td></tr></tbody></table><h5 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h5><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>per_page</td><td>每页显示的文章量 (0 = 关闭分页功能)</td><td>10</td></tr><tr><td>pagination_dir</td><td>分页目录</td><td>page</td></tr></tbody></table><h5 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h5><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>theme</td><td>当前主题名称。值为false时禁用主题</td></tr><tr><td>deploy</td><td>部署部分的设置</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo中文官网&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是hexo&quot;&gt;&lt;a href=&quot;#什么是hexo&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
      <category term="个人博客搭建系列" scheme="https://jason-live.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="hexo" scheme="https://jason-live.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
